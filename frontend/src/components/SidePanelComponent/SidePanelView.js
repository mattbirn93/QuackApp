import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { FaArrowLeft, FaArrowRight, FaHashtag, FaUser, FaChevronDown, FaChevronUp, FaDotCircle, } from "react-icons/fa";
import "./sidePanel.css";
const SidePanelView = ({ isOpen, isHovered, toggleSidePanel, scriptName, handleMouseEnter, handleMouseLeave, owners, characters, expandedSections, toggleSection, }) => {
    return (_jsxs("div", { className: `sidePanel ${isOpen || isHovered ? "open" : "collapsed"}`, onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave, children: [_jsx("div", { className: "toggleButtonContainer", children: _jsx("button", { className: "toggleButton", onClick: toggleSidePanel, children: isOpen ? _jsx(FaArrowLeft, {}) : _jsx(FaArrowRight, {}) }) }), (isOpen || isHovered) && (_jsxs("div", { className: "sidePanelContent", children: [_jsx("div", { className: "titleContainer", children: _jsx("p", { className: "scriptName", children: scriptName }) }), _jsxs("div", { className: "section", children: [_jsxs("div", { className: "sectionHeader", onClick: () => toggleSection("owners"), children: [_jsx("span", { children: "Owners" }), expandedSections.owners ? _jsx(FaChevronUp, {}) : _jsx(FaChevronDown, {})] }), expandedSections.owners &&
                                owners.map((owner) => (_jsxs("div", { className: "sidebarItem", children: [_jsx(FaUser, {}), _jsx("span", { children: owner.name }), _jsx("span", { className: `statusDot ${owner.isOnline ? "online" : "offline"}` })] }, owner.name)))] }), _jsxs("div", { className: "section", children: [_jsxs("div", { className: "sectionHeader", onClick: () => toggleSection("versions"), children: [_jsx("span", { children: "Versions" }), expandedSections.versions ? _jsx(FaChevronUp, {}) : _jsx(FaChevronDown, {})] }), expandedSections.versions && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Scene Versions" })] }), _jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Scene Content" })] })] }))] }), _jsxs("div", { className: "section", children: [_jsxs("div", { className: "sectionHeader", onClick: () => toggleSection("details"), children: [_jsx("span", { children: "Script Details" }), expandedSections.details ? _jsx(FaChevronUp, {}) : _jsx(FaChevronDown, {})] }), expandedSections.details && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Date Added" })] }), _jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Pages" })] })] }))] }), _jsxs("div", { className: "section", children: [_jsxs("div", { className: "sectionHeader", onClick: () => toggleSection("notes"), children: [_jsx("span", { children: "Notes" }), expandedSections.notes ? _jsx(FaChevronUp, {}) : _jsx(FaChevronDown, {})] }), expandedSections.notes && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Note 1" })] }), _jsxs("div", { className: "sidebarItem", children: [_jsx(FaHashtag, {}), _jsx("span", { children: "Note 2" })] })] }))] }), _jsxs("div", { className: "section", children: [_jsxs("div", { className: "sectionHeader", onClick: () => toggleSection("characters"), children: [_jsx("span", { children: "Characters" }), expandedSections.characters ? (_jsx(FaChevronUp, {})) : (_jsx(FaChevronDown, {}))] }), expandedSections.characters && (_jsx("div", { className: "charactersList", children: characters.map((character) => (_jsxs("div", { className: "sidebarItem", children: [_jsx(FaDotCircle, {}), _jsx("span", { children: character.name })] }, character.name))) }))] })] }))] }));
};
export default SidePanelView;
